blueprint:
  name: Switch Light on/off
  description: Turns light on and off if left direction switch is pressed
  domain: automation
  input:
    button_device:
      name: Switch
      description: Select the switch
      selector:
        entity:
          domain: binary_sensor
          multiple: false
          integration: eltako
    switch_position:
      name: Switch Position
      description: Choose 'left' or 'right'
      selector:
        select:
          options:
            - left
            - right
    light_target:
      name: Light to Control
      description: The light entity to turn on or off based on the event data
      selector:
        target:
          entity:
            domain: light


triggers:
  - trigger: event
    event_type: !input button_device
    
conditions:
  - condition:
      - condition: template
        value_template: >-
          {{ trigger.event.data.push_duration_in_sec > 0 and 
          trigger.event.data.push_duration_in_sec < 0.4 and 
          trigger.event.data.pressed == False}}

actions:
  - action: light.turn_on
    target:
      device_id:
        - 3bd0f6fe4929b673ec1c24a3c20d05e4
    data:
      brightness_pct: 100
    enabled: false
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.pressed_buttons == ['LT'] and input.switch_position == 'left'}}"
        sequence:
          - service: light.turn_on
            target: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.pressed_buttons == ['LB'] and input.switch_position == 'left'}}"
        sequence:
          - service: light.turn_off
            target: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.pressed_buttons == ['RT'] and input.switch_position == 'right'}}"
        sequence:
          - service: light.turn_on
            target: !input light_target
      - conditions:
          - condition: template
            value_template: "{{ trigger.event.data.pressed_buttons == ['RB'] and input.switch_position == 'right'}}"
        sequence:
          - service: light.turn_off
            target: !input light_target
